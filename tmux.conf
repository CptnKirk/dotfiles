# auto-set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# nodelay escapes
set-option -sg escape-time 0

# rebind the prefix key ctrl-t[mux] ;)
unbind C-t
set -g prefix C-t
bind C-t send-prefix

set-option -g default-shell /usr/bin/zsh

# set tmux to 256 colors
set -g default-terminal "screen-256color"

# Use vim keybindings in copy mode
set -g status-keys vi
setw -g mode-keys vi

set -g mouse on
setw -g monitor-activity on

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -n C-\ resize-pane -y 13

bind-key -n M-j resize-pane -D 10
bind-key -n M-k resize-pane -U 10
bind-key -n M-h resize-pane -R 10
bind-key -n M-l resize-pane -L 10
bind-key -n M-\ resize-pane -y 13

# creating new panels
bind j split-window -v
bind l split-window -h
